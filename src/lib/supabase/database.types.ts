// This file is auto-generated by the Supabase CLI
// See: https://supabase.com/docs/guides/api/generating-types

// eslint-disable-next-line @typescript-eslint/no-empty-object-type
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string;
          email: string;
          created_at: string;
          role: 'ADMIN' | 'USER';
        };
        Insert: {
          id?: string;
          email: string;
          created_at?: string;
          role?: 'ADMIN' | 'USER';
        };
        Update: {
          id?: string;
          email?: string;
          created_at?: string;
          role?: 'ADMIN' | 'USER';
        };
      };
      ActivityLog: {
        Row: {
          id: string
          userId: string
          analysisType: 'text' | 'image'
          inputData: string
          resultLabel: string
          resultConfidence: number
          resultAllScores: string
          resultReferences: string | null
          extractedText: string | null
          createdAt: string
          updatedAt: string
        }
        Insert: {
          id?: string
          userId: string
          analysisType: 'text' | 'image'
          inputData: string
          resultLabel: string
          resultConfidence: number
          resultAllScores: string
          resultReferences?: string | null
          extractedText?: string | null
          createdAt?: string
          updatedAt?: string
        }
        Update: {
          id?: string
          userId?: string
          analysisType?: 'text' | 'image'
          inputData?: string
          resultLabel?: string
          resultConfidence?: number
          resultAllScores?: string
          resultReferences?: string | null
          extractedText?: string | null
          createdAt?: string
          updatedAt?: string
        }
      }
    }
    Views: {
      // You NEED to look at your actual file at lines 78, 81, 84
      // Here's an example of what *might* be there and how to fix it:
      // If you have a view named 'my_view' and it has a column that was typed as `{}`
      // For example, imagine lines 78, 81, 84 are part of these definitions:
      my_view_name_1: { // This might be around line 78
        Row: {
          some_column_78: unknown; // CHANGED FROM {}
        };
      };
      my_view_name_2: { // This might be around line 81
        Row: {
          another_column_81: unknown; // CHANGED FROM {}
        };
      };
      my_view_name_3: { // This might be around line 84
        Row: {
          final_column_84: unknown; // CHANGED FROM {}
        };
      };
      // ... potentially other views
    }
    Functions: {
      // Similarly, if any database functions are typed with {}
      // my_function_name: {
      //   Args: Record<string, unknown>; // CHANGED FROM {}
      //   Returns: unknown; // CHANGED FROM {}
      // };
    }
    Enums: {
      // Define your enums here
    }
  }
}