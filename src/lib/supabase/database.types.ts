// This file is auto-generated by the Supabase CLI
// See: https://supabase.com/docs/guides/api/generating-types

// eslint-disable-next-line @typescript-eslint/no-empty-object-type
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string;
          email: string;
          created_at: string;
          role: 'ADMIN' | 'USER';
        };
        Insert: {
          id?: string;
          email: string;
          created_at?: string;
          role?: 'ADMIN' | 'USER';
        };
        Update: {
          id?: string;
          email?: string;
          created_at?: string;
          role?: 'ADMIN' | 'USER';
        };
      };
      ActivityLog: {
        Row: {
          id: string
          userId: string
          analysisType: 'text' | 'image'
          inputData: string
          resultLabel: string
          resultConfidence: number
          resultAllScores: string
          resultReferences: string | null
          extractedText: string | null
          createdAt: string
          updatedAt: string
        }
        Insert: {
          id?: string
          userId: string
          analysisType: 'text' | 'image'
          inputData: string
          resultLabel: string
          resultConfidence: number
          resultAllScores: string
          resultReferences?: string | null
          extractedText?: string | null
          createdAt?: string
          updatedAt?: string
        }
        Update: {
          id?: string
          userId?: string
          analysisType?: 'text' | 'image'
          inputData?: string
          resultLabel?: string
          resultConfidence?: number
          resultAllScores?: string
          resultReferences?: string | null
          extractedText?: string | null
          createdAt?: string
          updatedAt?: string
        }
      }
    }
    Views: {
      // Assuming this is where the errors are, if not, find where {} is used
      // Example of a view that might have had the error
      // Replace these if they match your problematic lines
      // view_name_1: {
      //   Row: {
      //     some_column: unknown; // CHANGED FROM {}
      //   };
      // };
      // view_name_2: {
      //   Row: {
      //     another_column: unknown; // CHANGED FROM {}
      //   };
      // };
      // view_name_3: {
      //   Row: {
      //     final_column: unknown; // CHANGED FROM {}
      //   };
      // };
    }
    Functions: {
      // If any of your functions return or take {} as a parameter, update them here
      // For instance:
      // some_function_name: {
      //   Args: Record<string, unknown>; // CHANGED FROM {}
      //   Returns: unknown; // CHANGED FROM {}
      // };
    }
    Enums: {
      // Define your enums here
    }
  }
}